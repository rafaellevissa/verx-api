name: EC2 Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: rafaellevissa/verx-backend:latest
  APP_NAME: verx-backend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file
        run: cp .env.example .env

      - uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Adonis Key
        run: node ace generate:key

      - name: Run tests
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Github Registrey
        if: success()
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image api
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} .

      - name: Publish image api
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: EC2 Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |-
            echo "${{ secrets.ENV }}" | base64 --decode > /tmp/.env
            app_port="$(cat /tmp/.env | grep -E '^PORT=[0-9]+$' | cut -d '=' -f 2)"
            docker container stop ${{ env.APP_NAME}} || true
            docker container rm ${{ env.APP_NAME}} || true
            docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker run -d --restart=unless-stopped -p "${app_port}:${app_port}" --env-file /tmp/.env --name ${{ env.APP_NAME}} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            rm /tmp/.env
